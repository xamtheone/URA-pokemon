//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :2.0.50727.1433
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace URA_Pokemon {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DescriptionPokemon")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DescriptionPokemon : global::System.Data.DataSet {
        
        private POKEMONDataTable tablePOKEMON;
        
        private EFFORT_POINTDataTable tableEFFORT_POINT;
        
        private CAPACITEDataTable tableCAPACITE;
        
        private CAPACITESPEDataTable tableCAPACITESPE;
        
        private EVOLUTIONDataTable tableEVOLUTION;
        
        private DEPENDEVODataTable tableDEPENDEVO;
        
        private FORME_PRIMAIREDataTable tableFORME_PRIMAIRE;
        
        private global::System.Data.DataRelation relationPOKEMON_EFFORT_POINT;
        
        private global::System.Data.DataRelation relationPOKEMON_CAPACITE;
        
        private global::System.Data.DataRelation relationPOKEMON_CAPACITESPE;
        
        private global::System.Data.DataRelation relationPOKEMON_EVOLUTION;
        
        private global::System.Data.DataRelation relationPOKEMON_DEPENDEVO;
        
        private global::System.Data.DataRelation relationPOKEMON_FORME_PRIMAIRE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DescriptionPokemon() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DescriptionPokemon(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["POKEMON"] != null)) {
                    base.Tables.Add(new POKEMONDataTable(ds.Tables["POKEMON"]));
                }
                if ((ds.Tables["EFFORT_POINT"] != null)) {
                    base.Tables.Add(new EFFORT_POINTDataTable(ds.Tables["EFFORT_POINT"]));
                }
                if ((ds.Tables["CAPACITE"] != null)) {
                    base.Tables.Add(new CAPACITEDataTable(ds.Tables["CAPACITE"]));
                }
                if ((ds.Tables["CAPACITESPE"] != null)) {
                    base.Tables.Add(new CAPACITESPEDataTable(ds.Tables["CAPACITESPE"]));
                }
                if ((ds.Tables["EVOLUTION"] != null)) {
                    base.Tables.Add(new EVOLUTIONDataTable(ds.Tables["EVOLUTION"]));
                }
                if ((ds.Tables["DEPENDEVO"] != null)) {
                    base.Tables.Add(new DEPENDEVODataTable(ds.Tables["DEPENDEVO"]));
                }
                if ((ds.Tables["FORME_PRIMAIRE"] != null)) {
                    base.Tables.Add(new FORME_PRIMAIREDataTable(ds.Tables["FORME_PRIMAIRE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public POKEMONDataTable POKEMON {
            get {
                return this.tablePOKEMON;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EFFORT_POINTDataTable EFFORT_POINT {
            get {
                return this.tableEFFORT_POINT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAPACITEDataTable CAPACITE {
            get {
                return this.tableCAPACITE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAPACITESPEDataTable CAPACITESPE {
            get {
                return this.tableCAPACITESPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EVOLUTIONDataTable EVOLUTION {
            get {
                return this.tableEVOLUTION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEPENDEVODataTable DEPENDEVO {
            get {
                return this.tableDEPENDEVO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FORME_PRIMAIREDataTable FORME_PRIMAIRE {
            get {
                return this.tableFORME_PRIMAIRE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DescriptionPokemon cln = ((DescriptionPokemon)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["POKEMON"] != null)) {
                    base.Tables.Add(new POKEMONDataTable(ds.Tables["POKEMON"]));
                }
                if ((ds.Tables["EFFORT_POINT"] != null)) {
                    base.Tables.Add(new EFFORT_POINTDataTable(ds.Tables["EFFORT_POINT"]));
                }
                if ((ds.Tables["CAPACITE"] != null)) {
                    base.Tables.Add(new CAPACITEDataTable(ds.Tables["CAPACITE"]));
                }
                if ((ds.Tables["CAPACITESPE"] != null)) {
                    base.Tables.Add(new CAPACITESPEDataTable(ds.Tables["CAPACITESPE"]));
                }
                if ((ds.Tables["EVOLUTION"] != null)) {
                    base.Tables.Add(new EVOLUTIONDataTable(ds.Tables["EVOLUTION"]));
                }
                if ((ds.Tables["DEPENDEVO"] != null)) {
                    base.Tables.Add(new DEPENDEVODataTable(ds.Tables["DEPENDEVO"]));
                }
                if ((ds.Tables["FORME_PRIMAIRE"] != null)) {
                    base.Tables.Add(new FORME_PRIMAIREDataTable(ds.Tables["FORME_PRIMAIRE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePOKEMON = ((POKEMONDataTable)(base.Tables["POKEMON"]));
            if ((initTable == true)) {
                if ((this.tablePOKEMON != null)) {
                    this.tablePOKEMON.InitVars();
                }
            }
            this.tableEFFORT_POINT = ((EFFORT_POINTDataTable)(base.Tables["EFFORT_POINT"]));
            if ((initTable == true)) {
                if ((this.tableEFFORT_POINT != null)) {
                    this.tableEFFORT_POINT.InitVars();
                }
            }
            this.tableCAPACITE = ((CAPACITEDataTable)(base.Tables["CAPACITE"]));
            if ((initTable == true)) {
                if ((this.tableCAPACITE != null)) {
                    this.tableCAPACITE.InitVars();
                }
            }
            this.tableCAPACITESPE = ((CAPACITESPEDataTable)(base.Tables["CAPACITESPE"]));
            if ((initTable == true)) {
                if ((this.tableCAPACITESPE != null)) {
                    this.tableCAPACITESPE.InitVars();
                }
            }
            this.tableEVOLUTION = ((EVOLUTIONDataTable)(base.Tables["EVOLUTION"]));
            if ((initTable == true)) {
                if ((this.tableEVOLUTION != null)) {
                    this.tableEVOLUTION.InitVars();
                }
            }
            this.tableDEPENDEVO = ((DEPENDEVODataTable)(base.Tables["DEPENDEVO"]));
            if ((initTable == true)) {
                if ((this.tableDEPENDEVO != null)) {
                    this.tableDEPENDEVO.InitVars();
                }
            }
            this.tableFORME_PRIMAIRE = ((FORME_PRIMAIREDataTable)(base.Tables["FORME_PRIMAIRE"]));
            if ((initTable == true)) {
                if ((this.tableFORME_PRIMAIRE != null)) {
                    this.tableFORME_PRIMAIRE.InitVars();
                }
            }
            this.relationPOKEMON_EFFORT_POINT = this.Relations["POKEMON_EFFORT_POINT"];
            this.relationPOKEMON_CAPACITE = this.Relations["POKEMON_CAPACITE"];
            this.relationPOKEMON_CAPACITESPE = this.Relations["POKEMON_CAPACITESPE"];
            this.relationPOKEMON_EVOLUTION = this.Relations["POKEMON_EVOLUTION"];
            this.relationPOKEMON_DEPENDEVO = this.Relations["POKEMON_DEPENDEVO"];
            this.relationPOKEMON_FORME_PRIMAIRE = this.Relations["POKEMON_FORME_PRIMAIRE"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DescriptionPokemon";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DescriptionPokemon.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePOKEMON = new POKEMONDataTable();
            base.Tables.Add(this.tablePOKEMON);
            this.tableEFFORT_POINT = new EFFORT_POINTDataTable();
            base.Tables.Add(this.tableEFFORT_POINT);
            this.tableCAPACITE = new CAPACITEDataTable();
            base.Tables.Add(this.tableCAPACITE);
            this.tableCAPACITESPE = new CAPACITESPEDataTable();
            base.Tables.Add(this.tableCAPACITESPE);
            this.tableEVOLUTION = new EVOLUTIONDataTable();
            base.Tables.Add(this.tableEVOLUTION);
            this.tableDEPENDEVO = new DEPENDEVODataTable();
            base.Tables.Add(this.tableDEPENDEVO);
            this.tableFORME_PRIMAIRE = new FORME_PRIMAIREDataTable();
            base.Tables.Add(this.tableFORME_PRIMAIRE);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("POKEMON_EFFORT_POINT", new global::System.Data.DataColumn[] {
                        this.tablePOKEMON.POKEMON_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableEFFORT_POINT.POKEMON_IdColumn});
            this.tableEFFORT_POINT.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("POKEMON_CAPACITE", new global::System.Data.DataColumn[] {
                        this.tablePOKEMON.POKEMON_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAPACITE.POKEMON_IdColumn});
            this.tableCAPACITE.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("POKEMON_CAPACITESPE", new global::System.Data.DataColumn[] {
                        this.tablePOKEMON.POKEMON_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAPACITESPE.POKEMON_IdColumn});
            this.tableCAPACITESPE.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("POKEMON_EVOLUTION", new global::System.Data.DataColumn[] {
                        this.tablePOKEMON.POKEMON_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableEVOLUTION.POKEMON_IdColumn});
            this.tableEVOLUTION.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("POKEMON_DEPENDEVO", new global::System.Data.DataColumn[] {
                        this.tablePOKEMON.POKEMON_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDEPENDEVO.POKEMON_IdColumn});
            this.tableDEPENDEVO.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("POKEMON_FORME_PRIMAIRE", new global::System.Data.DataColumn[] {
                        this.tablePOKEMON.POKEMON_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableFORME_PRIMAIRE.POKEMON_IdColumn});
            this.tableFORME_PRIMAIRE.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationPOKEMON_EFFORT_POINT = new global::System.Data.DataRelation("POKEMON_EFFORT_POINT", new global::System.Data.DataColumn[] {
                        this.tablePOKEMON.POKEMON_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableEFFORT_POINT.POKEMON_IdColumn}, false);
            this.relationPOKEMON_EFFORT_POINT.Nested = true;
            this.Relations.Add(this.relationPOKEMON_EFFORT_POINT);
            this.relationPOKEMON_CAPACITE = new global::System.Data.DataRelation("POKEMON_CAPACITE", new global::System.Data.DataColumn[] {
                        this.tablePOKEMON.POKEMON_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAPACITE.POKEMON_IdColumn}, false);
            this.relationPOKEMON_CAPACITE.Nested = true;
            this.Relations.Add(this.relationPOKEMON_CAPACITE);
            this.relationPOKEMON_CAPACITESPE = new global::System.Data.DataRelation("POKEMON_CAPACITESPE", new global::System.Data.DataColumn[] {
                        this.tablePOKEMON.POKEMON_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAPACITESPE.POKEMON_IdColumn}, false);
            this.relationPOKEMON_CAPACITESPE.Nested = true;
            this.Relations.Add(this.relationPOKEMON_CAPACITESPE);
            this.relationPOKEMON_EVOLUTION = new global::System.Data.DataRelation("POKEMON_EVOLUTION", new global::System.Data.DataColumn[] {
                        this.tablePOKEMON.POKEMON_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableEVOLUTION.POKEMON_IdColumn}, false);
            this.relationPOKEMON_EVOLUTION.Nested = true;
            this.Relations.Add(this.relationPOKEMON_EVOLUTION);
            this.relationPOKEMON_DEPENDEVO = new global::System.Data.DataRelation("POKEMON_DEPENDEVO", new global::System.Data.DataColumn[] {
                        this.tablePOKEMON.POKEMON_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDEPENDEVO.POKEMON_IdColumn}, false);
            this.relationPOKEMON_DEPENDEVO.Nested = true;
            this.Relations.Add(this.relationPOKEMON_DEPENDEVO);
            this.relationPOKEMON_FORME_PRIMAIRE = new global::System.Data.DataRelation("POKEMON_FORME_PRIMAIRE", new global::System.Data.DataColumn[] {
                        this.tablePOKEMON.POKEMON_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableFORME_PRIMAIRE.POKEMON_IdColumn}, false);
            this.relationPOKEMON_FORME_PRIMAIRE.Nested = true;
            this.Relations.Add(this.relationPOKEMON_FORME_PRIMAIRE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePOKEMON() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEFFORT_POINT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCAPACITE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCAPACITESPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEVOLUTION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDEPENDEVO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFORME_PRIMAIRE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DescriptionPokemon ds = new DescriptionPokemon();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void POKEMONRowChangeEventHandler(object sender, POKEMONRowChangeEvent e);
        
        public delegate void EFFORT_POINTRowChangeEventHandler(object sender, EFFORT_POINTRowChangeEvent e);
        
        public delegate void CAPACITERowChangeEventHandler(object sender, CAPACITERowChangeEvent e);
        
        public delegate void CAPACITESPERowChangeEventHandler(object sender, CAPACITESPERowChangeEvent e);
        
        public delegate void EVOLUTIONRowChangeEventHandler(object sender, EVOLUTIONRowChangeEvent e);
        
        public delegate void DEPENDEVORowChangeEventHandler(object sender, DEPENDEVORowChangeEvent e);
        
        public delegate void FORME_PRIMAIRERowChangeEventHandler(object sender, FORME_PRIMAIRERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class POKEMONDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnnum;
            
            private global::System.Data.DataColumn columnnom;
            
            private global::System.Data.DataColumn columnpv;
            
            private global::System.Data.DataColumn columnatq;
            
            private global::System.Data.DataColumn columndef;
            
            private global::System.Data.DataColumn columnvit;
            
            private global::System.Data.DataColumn column_as;
            
            private global::System.Data.DataColumn columnds;
            
            private global::System.Data.DataColumn columnevode;
            
            private global::System.Data.DataColumn columntype1;
            
            private global::System.Data.DataColumn columntype2;
            
            private global::System.Data.DataColumn columnoeuf1;
            
            private global::System.Data.DataColumn columnoeuf2;
            
            private global::System.Data.DataColumn columnPOKEMON_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POKEMONDataTable() {
                this.TableName = "POKEMON";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POKEMONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected POKEMONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numColumn {
                get {
                    return this.columnnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nomColumn {
                get {
                    return this.columnnom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pvColumn {
                get {
                    return this.columnpv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn atqColumn {
                get {
                    return this.columnatq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn defColumn {
                get {
                    return this.columndef;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vitColumn {
                get {
                    return this.columnvit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _asColumn {
                get {
                    return this.column_as;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dsColumn {
                get {
                    return this.columnds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn evodeColumn {
                get {
                    return this.columnevode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type1Column {
                get {
                    return this.columntype1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type2Column {
                get {
                    return this.columntype2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oeuf1Column {
                get {
                    return this.columnoeuf1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn oeuf2Column {
                get {
                    return this.columnoeuf2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POKEMON_IdColumn {
                get {
                    return this.columnPOKEMON_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POKEMONRow this[int index] {
                get {
                    return ((POKEMONRow)(this.Rows[index]));
                }
            }
            
            public event POKEMONRowChangeEventHandler POKEMONRowChanging;
            
            public event POKEMONRowChangeEventHandler POKEMONRowChanged;
            
            public event POKEMONRowChangeEventHandler POKEMONRowDeleting;
            
            public event POKEMONRowChangeEventHandler POKEMONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPOKEMONRow(POKEMONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POKEMONRow AddPOKEMONRow(long num, string nom, ulong pv, ulong atq, ulong def, ulong vit, ulong _as, ulong ds, string evode, string type1, string type2, string oeuf1, string oeuf2) {
                POKEMONRow rowPOKEMONRow = ((POKEMONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        num,
                        nom,
                        pv,
                        atq,
                        def,
                        vit,
                        _as,
                        ds,
                        evode,
                        type1,
                        type2,
                        oeuf1,
                        oeuf2,
                        null};
                rowPOKEMONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPOKEMONRow);
                return rowPOKEMONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                POKEMONDataTable cln = ((POKEMONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new POKEMONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnum = base.Columns["num"];
                this.columnnom = base.Columns["nom"];
                this.columnpv = base.Columns["pv"];
                this.columnatq = base.Columns["atq"];
                this.columndef = base.Columns["def"];
                this.columnvit = base.Columns["vit"];
                this.column_as = base.Columns["as"];
                this.columnds = base.Columns["ds"];
                this.columnevode = base.Columns["evode"];
                this.columntype1 = base.Columns["type1"];
                this.columntype2 = base.Columns["type2"];
                this.columnoeuf1 = base.Columns["oeuf1"];
                this.columnoeuf2 = base.Columns["oeuf2"];
                this.columnPOKEMON_Id = base.Columns["POKEMON_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnum = new global::System.Data.DataColumn("num", typeof(long), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnnum);
                this.columnnom = new global::System.Data.DataColumn("nom", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnnom);
                this.columnpv = new global::System.Data.DataColumn("pv", typeof(ulong), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnpv);
                this.columnatq = new global::System.Data.DataColumn("atq", typeof(ulong), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnatq);
                this.columndef = new global::System.Data.DataColumn("def", typeof(ulong), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columndef);
                this.columnvit = new global::System.Data.DataColumn("vit", typeof(ulong), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnvit);
                this.column_as = new global::System.Data.DataColumn("as", typeof(ulong), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.column_as);
                this.columnds = new global::System.Data.DataColumn("ds", typeof(ulong), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnds);
                this.columnevode = new global::System.Data.DataColumn("evode", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnevode);
                this.columntype1 = new global::System.Data.DataColumn("type1", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columntype1);
                this.columntype2 = new global::System.Data.DataColumn("type2", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columntype2);
                this.columnoeuf1 = new global::System.Data.DataColumn("oeuf1", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnoeuf1);
                this.columnoeuf2 = new global::System.Data.DataColumn("oeuf2", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnoeuf2);
                this.columnPOKEMON_Id = new global::System.Data.DataColumn("POKEMON_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPOKEMON_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPOKEMON_Id}, true));
                this.columnnum.Namespace = "";
                this.columnnom.Namespace = "";
                this.columnpv.Namespace = "";
                this.columnatq.Namespace = "";
                this.columndef.Namespace = "";
                this.columnvit.Namespace = "";
                this.column_as.Namespace = "";
                this.columnds.Namespace = "";
                this.columnevode.Namespace = "";
                this.columntype1.Namespace = "";
                this.columntype2.Namespace = "";
                this.columnoeuf1.Namespace = "";
                this.columnoeuf2.Namespace = "";
                this.columnPOKEMON_Id.AutoIncrement = true;
                this.columnPOKEMON_Id.AllowDBNull = false;
                this.columnPOKEMON_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POKEMONRow NewPOKEMONRow() {
                return ((POKEMONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new POKEMONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(POKEMONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.POKEMONRowChanged != null)) {
                    this.POKEMONRowChanged(this, new POKEMONRowChangeEvent(((POKEMONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.POKEMONRowChanging != null)) {
                    this.POKEMONRowChanging(this, new POKEMONRowChangeEvent(((POKEMONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.POKEMONRowDeleted != null)) {
                    this.POKEMONRowDeleted(this, new POKEMONRowChangeEvent(((POKEMONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.POKEMONRowDeleting != null)) {
                    this.POKEMONRowDeleting(this, new POKEMONRowChangeEvent(((POKEMONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePOKEMONRow(POKEMONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DescriptionPokemon ds = new DescriptionPokemon();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "POKEMONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EFFORT_POINTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnstat;
            
            private global::System.Data.DataColumn columnvaleur;
            
            private global::System.Data.DataColumn columnPOKEMON_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EFFORT_POINTDataTable() {
                this.TableName = "EFFORT_POINT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EFFORT_POINTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EFFORT_POINTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statColumn {
                get {
                    return this.columnstat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valeurColumn {
                get {
                    return this.columnvaleur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POKEMON_IdColumn {
                get {
                    return this.columnPOKEMON_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EFFORT_POINTRow this[int index] {
                get {
                    return ((EFFORT_POINTRow)(this.Rows[index]));
                }
            }
            
            public event EFFORT_POINTRowChangeEventHandler EFFORT_POINTRowChanging;
            
            public event EFFORT_POINTRowChangeEventHandler EFFORT_POINTRowChanged;
            
            public event EFFORT_POINTRowChangeEventHandler EFFORT_POINTRowDeleting;
            
            public event EFFORT_POINTRowChangeEventHandler EFFORT_POINTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEFFORT_POINTRow(EFFORT_POINTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EFFORT_POINTRow AddEFFORT_POINTRow(string stat, ulong valeur, POKEMONRow parentPOKEMONRowByPOKEMON_EFFORT_POINT) {
                EFFORT_POINTRow rowEFFORT_POINTRow = ((EFFORT_POINTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        stat,
                        valeur,
                        null};
                if ((parentPOKEMONRowByPOKEMON_EFFORT_POINT != null)) {
                    columnValuesArray[2] = parentPOKEMONRowByPOKEMON_EFFORT_POINT[13];
                }
                rowEFFORT_POINTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEFFORT_POINTRow);
                return rowEFFORT_POINTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EFFORT_POINTDataTable cln = ((EFFORT_POINTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EFFORT_POINTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstat = base.Columns["stat"];
                this.columnvaleur = base.Columns["valeur"];
                this.columnPOKEMON_Id = base.Columns["POKEMON_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstat = new global::System.Data.DataColumn("stat", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnstat);
                this.columnvaleur = new global::System.Data.DataColumn("valeur", typeof(ulong), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnvaleur);
                this.columnPOKEMON_Id = new global::System.Data.DataColumn("POKEMON_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPOKEMON_Id);
                this.columnstat.Namespace = "";
                this.columnvaleur.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EFFORT_POINTRow NewEFFORT_POINTRow() {
                return ((EFFORT_POINTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EFFORT_POINTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EFFORT_POINTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EFFORT_POINTRowChanged != null)) {
                    this.EFFORT_POINTRowChanged(this, new EFFORT_POINTRowChangeEvent(((EFFORT_POINTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EFFORT_POINTRowChanging != null)) {
                    this.EFFORT_POINTRowChanging(this, new EFFORT_POINTRowChangeEvent(((EFFORT_POINTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EFFORT_POINTRowDeleted != null)) {
                    this.EFFORT_POINTRowDeleted(this, new EFFORT_POINTRowChangeEvent(((EFFORT_POINTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EFFORT_POINTRowDeleting != null)) {
                    this.EFFORT_POINTRowDeleting(this, new EFFORT_POINTRowChangeEvent(((EFFORT_POINTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEFFORT_POINTRow(EFFORT_POINTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DescriptionPokemon ds = new DescriptionPokemon();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EFFORT_POINTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAPACITEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnnom;
            
            private global::System.Data.DataColumn columnapprentissage;
            
            private global::System.Data.DataColumn columnniveau;
            
            private global::System.Data.DataColumn columnPOKEMON_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITEDataTable() {
                this.TableName = "CAPACITE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CAPACITEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CAPACITEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nomColumn {
                get {
                    return this.columnnom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apprentissageColumn {
                get {
                    return this.columnapprentissage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn niveauColumn {
                get {
                    return this.columnniveau;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POKEMON_IdColumn {
                get {
                    return this.columnPOKEMON_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITERow this[int index] {
                get {
                    return ((CAPACITERow)(this.Rows[index]));
                }
            }
            
            public event CAPACITERowChangeEventHandler CAPACITERowChanging;
            
            public event CAPACITERowChangeEventHandler CAPACITERowChanged;
            
            public event CAPACITERowChangeEventHandler CAPACITERowDeleting;
            
            public event CAPACITERowChangeEventHandler CAPACITERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCAPACITERow(CAPACITERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITERow AddCAPACITERow(string nom, string apprentissage, ulong niveau, POKEMONRow parentPOKEMONRowByPOKEMON_CAPACITE) {
                CAPACITERow rowCAPACITERow = ((CAPACITERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nom,
                        apprentissage,
                        niveau,
                        null};
                if ((parentPOKEMONRowByPOKEMON_CAPACITE != null)) {
                    columnValuesArray[3] = parentPOKEMONRowByPOKEMON_CAPACITE[13];
                }
                rowCAPACITERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAPACITERow);
                return rowCAPACITERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CAPACITEDataTable cln = ((CAPACITEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAPACITEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnom = base.Columns["nom"];
                this.columnapprentissage = base.Columns["apprentissage"];
                this.columnniveau = base.Columns["niveau"];
                this.columnPOKEMON_Id = base.Columns["POKEMON_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnom = new global::System.Data.DataColumn("nom", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnnom);
                this.columnapprentissage = new global::System.Data.DataColumn("apprentissage", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnapprentissage);
                this.columnniveau = new global::System.Data.DataColumn("niveau", typeof(ulong), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnniveau);
                this.columnPOKEMON_Id = new global::System.Data.DataColumn("POKEMON_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPOKEMON_Id);
                this.columnnom.Namespace = "";
                this.columnapprentissage.Namespace = "";
                this.columnniveau.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITERow NewCAPACITERow() {
                return ((CAPACITERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAPACITERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CAPACITERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAPACITERowChanged != null)) {
                    this.CAPACITERowChanged(this, new CAPACITERowChangeEvent(((CAPACITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAPACITERowChanging != null)) {
                    this.CAPACITERowChanging(this, new CAPACITERowChangeEvent(((CAPACITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAPACITERowDeleted != null)) {
                    this.CAPACITERowDeleted(this, new CAPACITERowChangeEvent(((CAPACITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAPACITERowDeleting != null)) {
                    this.CAPACITERowDeleting(this, new CAPACITERowChangeEvent(((CAPACITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCAPACITERow(CAPACITERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DescriptionPokemon ds = new DescriptionPokemon();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAPACITEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAPACITESPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnnom;
            
            private global::System.Data.DataColumn columnPOKEMON_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITESPEDataTable() {
                this.TableName = "CAPACITESPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CAPACITESPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CAPACITESPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nomColumn {
                get {
                    return this.columnnom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POKEMON_IdColumn {
                get {
                    return this.columnPOKEMON_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITESPERow this[int index] {
                get {
                    return ((CAPACITESPERow)(this.Rows[index]));
                }
            }
            
            public event CAPACITESPERowChangeEventHandler CAPACITESPERowChanging;
            
            public event CAPACITESPERowChangeEventHandler CAPACITESPERowChanged;
            
            public event CAPACITESPERowChangeEventHandler CAPACITESPERowDeleting;
            
            public event CAPACITESPERowChangeEventHandler CAPACITESPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCAPACITESPERow(CAPACITESPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITESPERow AddCAPACITESPERow(string nom, POKEMONRow parentPOKEMONRowByPOKEMON_CAPACITESPE) {
                CAPACITESPERow rowCAPACITESPERow = ((CAPACITESPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nom,
                        null};
                if ((parentPOKEMONRowByPOKEMON_CAPACITESPE != null)) {
                    columnValuesArray[1] = parentPOKEMONRowByPOKEMON_CAPACITESPE[13];
                }
                rowCAPACITESPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAPACITESPERow);
                return rowCAPACITESPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CAPACITESPEDataTable cln = ((CAPACITESPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAPACITESPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnom = base.Columns["nom"];
                this.columnPOKEMON_Id = base.Columns["POKEMON_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnom = new global::System.Data.DataColumn("nom", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnnom);
                this.columnPOKEMON_Id = new global::System.Data.DataColumn("POKEMON_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPOKEMON_Id);
                this.columnnom.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITESPERow NewCAPACITESPERow() {
                return ((CAPACITESPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAPACITESPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CAPACITESPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAPACITESPERowChanged != null)) {
                    this.CAPACITESPERowChanged(this, new CAPACITESPERowChangeEvent(((CAPACITESPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAPACITESPERowChanging != null)) {
                    this.CAPACITESPERowChanging(this, new CAPACITESPERowChangeEvent(((CAPACITESPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAPACITESPERowDeleted != null)) {
                    this.CAPACITESPERowDeleted(this, new CAPACITESPERowChangeEvent(((CAPACITESPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAPACITESPERowDeleting != null)) {
                    this.CAPACITESPERowDeleting(this, new CAPACITESPERowChangeEvent(((CAPACITESPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCAPACITESPERow(CAPACITESPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DescriptionPokemon ds = new DescriptionPokemon();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAPACITESPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EVOLUTIONDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnevo;
            
            private global::System.Data.DataColumn columnnom;
            
            private global::System.Data.DataColumn columnniveau;
            
            private global::System.Data.DataColumn columnPOKEMON_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EVOLUTIONDataTable() {
                this.TableName = "EVOLUTION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EVOLUTIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EVOLUTIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn evoColumn {
                get {
                    return this.columnevo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nomColumn {
                get {
                    return this.columnnom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn niveauColumn {
                get {
                    return this.columnniveau;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POKEMON_IdColumn {
                get {
                    return this.columnPOKEMON_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EVOLUTIONRow this[int index] {
                get {
                    return ((EVOLUTIONRow)(this.Rows[index]));
                }
            }
            
            public event EVOLUTIONRowChangeEventHandler EVOLUTIONRowChanging;
            
            public event EVOLUTIONRowChangeEventHandler EVOLUTIONRowChanged;
            
            public event EVOLUTIONRowChangeEventHandler EVOLUTIONRowDeleting;
            
            public event EVOLUTIONRowChangeEventHandler EVOLUTIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEVOLUTIONRow(EVOLUTIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EVOLUTIONRow AddEVOLUTIONRow(string evo, string nom, long niveau, POKEMONRow parentPOKEMONRowByPOKEMON_EVOLUTION) {
                EVOLUTIONRow rowEVOLUTIONRow = ((EVOLUTIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        evo,
                        nom,
                        niveau,
                        null};
                if ((parentPOKEMONRowByPOKEMON_EVOLUTION != null)) {
                    columnValuesArray[3] = parentPOKEMONRowByPOKEMON_EVOLUTION[13];
                }
                rowEVOLUTIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEVOLUTIONRow);
                return rowEVOLUTIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EVOLUTIONDataTable cln = ((EVOLUTIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EVOLUTIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnevo = base.Columns["evo"];
                this.columnnom = base.Columns["nom"];
                this.columnniveau = base.Columns["niveau"];
                this.columnPOKEMON_Id = base.Columns["POKEMON_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnevo = new global::System.Data.DataColumn("evo", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnevo);
                this.columnnom = new global::System.Data.DataColumn("nom", typeof(string), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnnom);
                this.columnniveau = new global::System.Data.DataColumn("niveau", typeof(long), null, global::System.Data.MappingType.Attribute);
                base.Columns.Add(this.columnniveau);
                this.columnPOKEMON_Id = new global::System.Data.DataColumn("POKEMON_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPOKEMON_Id);
                this.columnevo.Namespace = "";
                this.columnnom.Namespace = "";
                this.columnniveau.Namespace = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EVOLUTIONRow NewEVOLUTIONRow() {
                return ((EVOLUTIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EVOLUTIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EVOLUTIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EVOLUTIONRowChanged != null)) {
                    this.EVOLUTIONRowChanged(this, new EVOLUTIONRowChangeEvent(((EVOLUTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EVOLUTIONRowChanging != null)) {
                    this.EVOLUTIONRowChanging(this, new EVOLUTIONRowChangeEvent(((EVOLUTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EVOLUTIONRowDeleted != null)) {
                    this.EVOLUTIONRowDeleted(this, new EVOLUTIONRowChangeEvent(((EVOLUTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EVOLUTIONRowDeleting != null)) {
                    this.EVOLUTIONRowDeleting(this, new EVOLUTIONRowChangeEvent(((EVOLUTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEVOLUTIONRow(EVOLUTIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DescriptionPokemon ds = new DescriptionPokemon();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EVOLUTIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEPENDEVODataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPOKEMON_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPENDEVODataTable() {
                this.TableName = "DEPENDEVO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DEPENDEVODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DEPENDEVODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POKEMON_IdColumn {
                get {
                    return this.columnPOKEMON_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPENDEVORow this[int index] {
                get {
                    return ((DEPENDEVORow)(this.Rows[index]));
                }
            }
            
            public event DEPENDEVORowChangeEventHandler DEPENDEVORowChanging;
            
            public event DEPENDEVORowChangeEventHandler DEPENDEVORowChanged;
            
            public event DEPENDEVORowChangeEventHandler DEPENDEVORowDeleting;
            
            public event DEPENDEVORowChangeEventHandler DEPENDEVORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDEPENDEVORow(DEPENDEVORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPENDEVORow AddDEPENDEVORow(POKEMONRow parentPOKEMONRowByPOKEMON_DEPENDEVO) {
                DEPENDEVORow rowDEPENDEVORow = ((DEPENDEVORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                if ((parentPOKEMONRowByPOKEMON_DEPENDEVO != null)) {
                    columnValuesArray[0] = parentPOKEMONRowByPOKEMON_DEPENDEVO[13];
                }
                rowDEPENDEVORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEPENDEVORow);
                return rowDEPENDEVORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DEPENDEVODataTable cln = ((DEPENDEVODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEPENDEVODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPOKEMON_Id = base.Columns["POKEMON_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPOKEMON_Id = new global::System.Data.DataColumn("POKEMON_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPOKEMON_Id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPENDEVORow NewDEPENDEVORow() {
                return ((DEPENDEVORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEPENDEVORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DEPENDEVORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEPENDEVORowChanged != null)) {
                    this.DEPENDEVORowChanged(this, new DEPENDEVORowChangeEvent(((DEPENDEVORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEPENDEVORowChanging != null)) {
                    this.DEPENDEVORowChanging(this, new DEPENDEVORowChangeEvent(((DEPENDEVORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEPENDEVORowDeleted != null)) {
                    this.DEPENDEVORowDeleted(this, new DEPENDEVORowChangeEvent(((DEPENDEVORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEPENDEVORowDeleting != null)) {
                    this.DEPENDEVORowDeleting(this, new DEPENDEVORowChangeEvent(((DEPENDEVORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDEPENDEVORow(DEPENDEVORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DescriptionPokemon ds = new DescriptionPokemon();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEPENDEVODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FORME_PRIMAIREDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPOKEMON_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORME_PRIMAIREDataTable() {
                this.TableName = "FORME_PRIMAIRE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FORME_PRIMAIREDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FORME_PRIMAIREDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn POKEMON_IdColumn {
                get {
                    return this.columnPOKEMON_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORME_PRIMAIRERow this[int index] {
                get {
                    return ((FORME_PRIMAIRERow)(this.Rows[index]));
                }
            }
            
            public event FORME_PRIMAIRERowChangeEventHandler FORME_PRIMAIRERowChanging;
            
            public event FORME_PRIMAIRERowChangeEventHandler FORME_PRIMAIRERowChanged;
            
            public event FORME_PRIMAIRERowChangeEventHandler FORME_PRIMAIRERowDeleting;
            
            public event FORME_PRIMAIRERowChangeEventHandler FORME_PRIMAIRERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFORME_PRIMAIRERow(FORME_PRIMAIRERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORME_PRIMAIRERow AddFORME_PRIMAIRERow(POKEMONRow parentPOKEMONRowByPOKEMON_FORME_PRIMAIRE) {
                FORME_PRIMAIRERow rowFORME_PRIMAIRERow = ((FORME_PRIMAIRERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                if ((parentPOKEMONRowByPOKEMON_FORME_PRIMAIRE != null)) {
                    columnValuesArray[0] = parentPOKEMONRowByPOKEMON_FORME_PRIMAIRE[13];
                }
                rowFORME_PRIMAIRERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFORME_PRIMAIRERow);
                return rowFORME_PRIMAIRERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FORME_PRIMAIREDataTable cln = ((FORME_PRIMAIREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FORME_PRIMAIREDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPOKEMON_Id = base.Columns["POKEMON_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPOKEMON_Id = new global::System.Data.DataColumn("POKEMON_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPOKEMON_Id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORME_PRIMAIRERow NewFORME_PRIMAIRERow() {
                return ((FORME_PRIMAIRERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FORME_PRIMAIRERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FORME_PRIMAIRERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FORME_PRIMAIRERowChanged != null)) {
                    this.FORME_PRIMAIRERowChanged(this, new FORME_PRIMAIRERowChangeEvent(((FORME_PRIMAIRERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FORME_PRIMAIRERowChanging != null)) {
                    this.FORME_PRIMAIRERowChanging(this, new FORME_PRIMAIRERowChangeEvent(((FORME_PRIMAIRERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FORME_PRIMAIRERowDeleted != null)) {
                    this.FORME_PRIMAIRERowDeleted(this, new FORME_PRIMAIRERowChangeEvent(((FORME_PRIMAIRERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FORME_PRIMAIRERowDeleting != null)) {
                    this.FORME_PRIMAIRERowDeleting(this, new FORME_PRIMAIRERowChangeEvent(((FORME_PRIMAIRERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFORME_PRIMAIRERow(FORME_PRIMAIRERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DescriptionPokemon ds = new DescriptionPokemon();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FORME_PRIMAIREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class POKEMONRow : global::System.Data.DataRow {
            
            private POKEMONDataTable tablePOKEMON;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal POKEMONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePOKEMON = ((POKEMONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long num {
                get {
                    try {
                        return ((long)(this[this.tablePOKEMON.numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'num\' dans la table \'POKEMON\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOKEMON.numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nom {
                get {
                    try {
                        return ((string)(this[this.tablePOKEMON.nomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'nom\' dans la table \'POKEMON\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOKEMON.nomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong pv {
                get {
                    try {
                        return ((ulong)(this[this.tablePOKEMON.pvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'pv\' dans la table \'POKEMON\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOKEMON.pvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong atq {
                get {
                    try {
                        return ((ulong)(this[this.tablePOKEMON.atqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'atq\' dans la table \'POKEMON\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOKEMON.atqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong def {
                get {
                    try {
                        return ((ulong)(this[this.tablePOKEMON.defColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'def\' dans la table \'POKEMON\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOKEMON.defColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong vit {
                get {
                    try {
                        return ((ulong)(this[this.tablePOKEMON.vitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'vit\' dans la table \'POKEMON\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOKEMON.vitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong _as {
                get {
                    try {
                        return ((ulong)(this[this.tablePOKEMON._asColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'as\' dans la table \'POKEMON\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOKEMON._asColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong ds {
                get {
                    try {
                        return ((ulong)(this[this.tablePOKEMON.dsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'ds\' dans la table \'POKEMON\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOKEMON.dsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string evode {
                get {
                    try {
                        return ((string)(this[this.tablePOKEMON.evodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'evode\' dans la table \'POKEMON\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOKEMON.evodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type1 {
                get {
                    try {
                        return ((string)(this[this.tablePOKEMON.type1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'type1\' dans la table \'POKEMON\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOKEMON.type1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type2 {
                get {
                    try {
                        return ((string)(this[this.tablePOKEMON.type2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'type2\' dans la table \'POKEMON\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOKEMON.type2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oeuf1 {
                get {
                    try {
                        return ((string)(this[this.tablePOKEMON.oeuf1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'oeuf1\' dans la table \'POKEMON\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOKEMON.oeuf1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string oeuf2 {
                get {
                    try {
                        return ((string)(this[this.tablePOKEMON.oeuf2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'oeuf2\' dans la table \'POKEMON\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePOKEMON.oeuf2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POKEMON_Id {
                get {
                    return ((int)(this[this.tablePOKEMON.POKEMON_IdColumn]));
                }
                set {
                    this[this.tablePOKEMON.POKEMON_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumNull() {
                return this.IsNull(this.tablePOKEMON.numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumNull() {
                this[this.tablePOKEMON.numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnomNull() {
                return this.IsNull(this.tablePOKEMON.nomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnomNull() {
                this[this.tablePOKEMON.nomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspvNull() {
                return this.IsNull(this.tablePOKEMON.pvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpvNull() {
                this[this.tablePOKEMON.pvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsatqNull() {
                return this.IsNull(this.tablePOKEMON.atqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetatqNull() {
                this[this.tablePOKEMON.atqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdefNull() {
                return this.IsNull(this.tablePOKEMON.defColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdefNull() {
                this[this.tablePOKEMON.defColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvitNull() {
                return this.IsNull(this.tablePOKEMON.vitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvitNull() {
                this[this.tablePOKEMON.vitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_asNull() {
                return this.IsNull(this.tablePOKEMON._asColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_asNull() {
                this[this.tablePOKEMON._asColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdsNull() {
                return this.IsNull(this.tablePOKEMON.dsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdsNull() {
                this[this.tablePOKEMON.dsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsevodeNull() {
                return this.IsNull(this.tablePOKEMON.evodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetevodeNull() {
                this[this.tablePOKEMON.evodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype1Null() {
                return this.IsNull(this.tablePOKEMON.type1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype1Null() {
                this[this.tablePOKEMON.type1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype2Null() {
                return this.IsNull(this.tablePOKEMON.type2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype2Null() {
                this[this.tablePOKEMON.type2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoeuf1Null() {
                return this.IsNull(this.tablePOKEMON.oeuf1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoeuf1Null() {
                this[this.tablePOKEMON.oeuf1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoeuf2Null() {
                return this.IsNull(this.tablePOKEMON.oeuf2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoeuf2Null() {
                this[this.tablePOKEMON.oeuf2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EFFORT_POINTRow[] GetEFFORT_POINTRows() {
                if ((this.Table.ChildRelations["POKEMON_EFFORT_POINT"] == null)) {
                    return new EFFORT_POINTRow[0];
                }
                else {
                    return ((EFFORT_POINTRow[])(base.GetChildRows(this.Table.ChildRelations["POKEMON_EFFORT_POINT"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITERow[] GetCAPACITERows() {
                if ((this.Table.ChildRelations["POKEMON_CAPACITE"] == null)) {
                    return new CAPACITERow[0];
                }
                else {
                    return ((CAPACITERow[])(base.GetChildRows(this.Table.ChildRelations["POKEMON_CAPACITE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITESPERow[] GetCAPACITESPERows() {
                if ((this.Table.ChildRelations["POKEMON_CAPACITESPE"] == null)) {
                    return new CAPACITESPERow[0];
                }
                else {
                    return ((CAPACITESPERow[])(base.GetChildRows(this.Table.ChildRelations["POKEMON_CAPACITESPE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EVOLUTIONRow[] GetEVOLUTIONRows() {
                if ((this.Table.ChildRelations["POKEMON_EVOLUTION"] == null)) {
                    return new EVOLUTIONRow[0];
                }
                else {
                    return ((EVOLUTIONRow[])(base.GetChildRows(this.Table.ChildRelations["POKEMON_EVOLUTION"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPENDEVORow[] GetDEPENDEVORows() {
                if ((this.Table.ChildRelations["POKEMON_DEPENDEVO"] == null)) {
                    return new DEPENDEVORow[0];
                }
                else {
                    return ((DEPENDEVORow[])(base.GetChildRows(this.Table.ChildRelations["POKEMON_DEPENDEVO"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORME_PRIMAIRERow[] GetFORME_PRIMAIRERows() {
                if ((this.Table.ChildRelations["POKEMON_FORME_PRIMAIRE"] == null)) {
                    return new FORME_PRIMAIRERow[0];
                }
                else {
                    return ((FORME_PRIMAIRERow[])(base.GetChildRows(this.Table.ChildRelations["POKEMON_FORME_PRIMAIRE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EFFORT_POINTRow : global::System.Data.DataRow {
            
            private EFFORT_POINTDataTable tableEFFORT_POINT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EFFORT_POINTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEFFORT_POINT = ((EFFORT_POINTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stat {
                get {
                    try {
                        return ((string)(this[this.tableEFFORT_POINT.statColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'stat\' dans la table \'EFFORT_POINT\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEFFORT_POINT.statColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong valeur {
                get {
                    try {
                        return ((ulong)(this[this.tableEFFORT_POINT.valeurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'valeur\' dans la table \'EFFORT_POINT\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEFFORT_POINT.valeurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POKEMON_Id {
                get {
                    try {
                        return ((int)(this[this.tableEFFORT_POINT.POKEMON_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'POKEMON_Id\' dans la table \'EFFORT_POINT\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEFFORT_POINT.POKEMON_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POKEMONRow POKEMONRow {
                get {
                    return ((POKEMONRow)(this.GetParentRow(this.Table.ParentRelations["POKEMON_EFFORT_POINT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["POKEMON_EFFORT_POINT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatNull() {
                return this.IsNull(this.tableEFFORT_POINT.statColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatNull() {
                this[this.tableEFFORT_POINT.statColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvaleurNull() {
                return this.IsNull(this.tableEFFORT_POINT.valeurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvaleurNull() {
                this[this.tableEFFORT_POINT.valeurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOKEMON_IdNull() {
                return this.IsNull(this.tableEFFORT_POINT.POKEMON_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOKEMON_IdNull() {
                this[this.tableEFFORT_POINT.POKEMON_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CAPACITERow : global::System.Data.DataRow {
            
            private CAPACITEDataTable tableCAPACITE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CAPACITERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAPACITE = ((CAPACITEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nom {
                get {
                    try {
                        return ((string)(this[this.tableCAPACITE.nomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'nom\' dans la table \'CAPACITE\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAPACITE.nomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apprentissage {
                get {
                    try {
                        return ((string)(this[this.tableCAPACITE.apprentissageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'apprentissage\' dans la table \'CAPACITE\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAPACITE.apprentissageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ulong niveau {
                get {
                    try {
                        return ((ulong)(this[this.tableCAPACITE.niveauColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'niveau\' dans la table \'CAPACITE\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAPACITE.niveauColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POKEMON_Id {
                get {
                    try {
                        return ((int)(this[this.tableCAPACITE.POKEMON_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'POKEMON_Id\' dans la table \'CAPACITE\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAPACITE.POKEMON_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POKEMONRow POKEMONRow {
                get {
                    return ((POKEMONRow)(this.GetParentRow(this.Table.ParentRelations["POKEMON_CAPACITE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["POKEMON_CAPACITE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnomNull() {
                return this.IsNull(this.tableCAPACITE.nomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnomNull() {
                this[this.tableCAPACITE.nomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapprentissageNull() {
                return this.IsNull(this.tableCAPACITE.apprentissageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapprentissageNull() {
                this[this.tableCAPACITE.apprentissageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsniveauNull() {
                return this.IsNull(this.tableCAPACITE.niveauColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetniveauNull() {
                this[this.tableCAPACITE.niveauColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOKEMON_IdNull() {
                return this.IsNull(this.tableCAPACITE.POKEMON_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOKEMON_IdNull() {
                this[this.tableCAPACITE.POKEMON_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CAPACITESPERow : global::System.Data.DataRow {
            
            private CAPACITESPEDataTable tableCAPACITESPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CAPACITESPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAPACITESPE = ((CAPACITESPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nom {
                get {
                    try {
                        return ((string)(this[this.tableCAPACITESPE.nomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'nom\' dans la table \'CAPACITESPE\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAPACITESPE.nomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POKEMON_Id {
                get {
                    try {
                        return ((int)(this[this.tableCAPACITESPE.POKEMON_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'POKEMON_Id\' dans la table \'CAPACITESPE\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAPACITESPE.POKEMON_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POKEMONRow POKEMONRow {
                get {
                    return ((POKEMONRow)(this.GetParentRow(this.Table.ParentRelations["POKEMON_CAPACITESPE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["POKEMON_CAPACITESPE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnomNull() {
                return this.IsNull(this.tableCAPACITESPE.nomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnomNull() {
                this[this.tableCAPACITESPE.nomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOKEMON_IdNull() {
                return this.IsNull(this.tableCAPACITESPE.POKEMON_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOKEMON_IdNull() {
                this[this.tableCAPACITESPE.POKEMON_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EVOLUTIONRow : global::System.Data.DataRow {
            
            private EVOLUTIONDataTable tableEVOLUTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EVOLUTIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEVOLUTION = ((EVOLUTIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string evo {
                get {
                    try {
                        return ((string)(this[this.tableEVOLUTION.evoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'evo\' dans la table \'EVOLUTION\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEVOLUTION.evoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nom {
                get {
                    try {
                        return ((string)(this[this.tableEVOLUTION.nomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'nom\' dans la table \'EVOLUTION\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEVOLUTION.nomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long niveau {
                get {
                    try {
                        return ((long)(this[this.tableEVOLUTION.niveauColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'niveau\' dans la table \'EVOLUTION\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEVOLUTION.niveauColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POKEMON_Id {
                get {
                    try {
                        return ((int)(this[this.tableEVOLUTION.POKEMON_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'POKEMON_Id\' dans la table \'EVOLUTION\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEVOLUTION.POKEMON_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POKEMONRow POKEMONRow {
                get {
                    return ((POKEMONRow)(this.GetParentRow(this.Table.ParentRelations["POKEMON_EVOLUTION"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["POKEMON_EVOLUTION"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsevoNull() {
                return this.IsNull(this.tableEVOLUTION.evoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetevoNull() {
                this[this.tableEVOLUTION.evoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnomNull() {
                return this.IsNull(this.tableEVOLUTION.nomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnomNull() {
                this[this.tableEVOLUTION.nomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsniveauNull() {
                return this.IsNull(this.tableEVOLUTION.niveauColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetniveauNull() {
                this[this.tableEVOLUTION.niveauColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOKEMON_IdNull() {
                return this.IsNull(this.tableEVOLUTION.POKEMON_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOKEMON_IdNull() {
                this[this.tableEVOLUTION.POKEMON_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DEPENDEVORow : global::System.Data.DataRow {
            
            private DEPENDEVODataTable tableDEPENDEVO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DEPENDEVORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEPENDEVO = ((DEPENDEVODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POKEMON_Id {
                get {
                    try {
                        return ((int)(this[this.tableDEPENDEVO.POKEMON_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'POKEMON_Id\' dans la table \'DEPENDEVO\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEPENDEVO.POKEMON_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POKEMONRow POKEMONRow {
                get {
                    return ((POKEMONRow)(this.GetParentRow(this.Table.ParentRelations["POKEMON_DEPENDEVO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["POKEMON_DEPENDEVO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOKEMON_IdNull() {
                return this.IsNull(this.tableDEPENDEVO.POKEMON_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOKEMON_IdNull() {
                this[this.tableDEPENDEVO.POKEMON_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FORME_PRIMAIRERow : global::System.Data.DataRow {
            
            private FORME_PRIMAIREDataTable tableFORME_PRIMAIRE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FORME_PRIMAIRERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFORME_PRIMAIRE = ((FORME_PRIMAIREDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int POKEMON_Id {
                get {
                    try {
                        return ((int)(this[this.tableFORME_PRIMAIRE.POKEMON_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'POKEMON_Id\' dans la table \'FORME_PRIMAIRE\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFORME_PRIMAIRE.POKEMON_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POKEMONRow POKEMONRow {
                get {
                    return ((POKEMONRow)(this.GetParentRow(this.Table.ParentRelations["POKEMON_FORME_PRIMAIRE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["POKEMON_FORME_PRIMAIRE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPOKEMON_IdNull() {
                return this.IsNull(this.tableFORME_PRIMAIRE.POKEMON_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPOKEMON_IdNull() {
                this[this.tableFORME_PRIMAIRE.POKEMON_IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class POKEMONRowChangeEvent : global::System.EventArgs {
            
            private POKEMONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POKEMONRowChangeEvent(POKEMONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public POKEMONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EFFORT_POINTRowChangeEvent : global::System.EventArgs {
            
            private EFFORT_POINTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EFFORT_POINTRowChangeEvent(EFFORT_POINTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EFFORT_POINTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CAPACITERowChangeEvent : global::System.EventArgs {
            
            private CAPACITERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITERowChangeEvent(CAPACITERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CAPACITESPERowChangeEvent : global::System.EventArgs {
            
            private CAPACITESPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITESPERowChangeEvent(CAPACITESPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CAPACITESPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EVOLUTIONRowChangeEvent : global::System.EventArgs {
            
            private EVOLUTIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EVOLUTIONRowChangeEvent(EVOLUTIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EVOLUTIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DEPENDEVORowChangeEvent : global::System.EventArgs {
            
            private DEPENDEVORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPENDEVORowChangeEvent(DEPENDEVORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPENDEVORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FORME_PRIMAIRERowChangeEvent : global::System.EventArgs {
            
            private FORME_PRIMAIRERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORME_PRIMAIRERowChangeEvent(FORME_PRIMAIRERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FORME_PRIMAIRERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591